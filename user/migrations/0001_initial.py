# Generated by Django 5.0.2 on 2024-03-05 05:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.IntegerField(choices=[(1, '男'), (2, '女')])),
                ('date_of_birth', models.DateField()),
                ('identity', models.CharField(default='', max_length=15)),
                ('address', models.CharField(default='', max_length=150)),
                ('postal_code', models.CharField(default='', max_length=15)),
                ('home_phone', models.CharField(default='', max_length=15)),
                ('mobile_phone', models.CharField(default='', max_length=15)),
                ('is_graduated', models.IntegerField(choices=[(1, '畢業'), (2, '應屆畢業'), (3, '未畢業(肄業或結業)')])),
                ('graduated_department', models.IntegerField(choices=[(1, '日間部'), (2, '進修部')])),
                ('graduated_year', models.IntegerField(choices=[(1, '二年制'), (2, '三年制'), (3, '四年制'), (4, '五年制')])),
                ('education', models.IntegerField(choices=[(1, '無'), (2, '二年制專科學校及進修學校肄業學生'), (3, '三年制專科學校及進修學校肄業學生'), (4, '五年制專科學校及進修學校肄業學生'), (5, '大學學士班（不包括空中大學）肄業'), (6, '自學進修學力鑑定考試通過'), (7, '國家考試及格，持有及格證書'), (8, '技能檢定合格'), (9, '符合年滿22歲、高級中等學校畢（結）業或修滿規定修業年限，且已修畢畢業應修學分80學分以上'), (10, '持有高級中等學校畢業證書後，從事相關工作經驗五年以上'), (11, '曾於大學校院擔任專業技術人員、於專科學校或高級中等學校擔任專業及技術教師'), (12, '持國外或香港、澳門專科以上學校畢（肄）業學歷')], default=1)),
                ('school_department', models.CharField(default='', max_length=50)),
                ('emergency_contact', models.CharField(default='', max_length=50)),
                ('emergency_contact_phone', models.CharField(default='', max_length=15)),
                ('emergency_contact_relationship', models.CharField(default='', max_length=15)),
                ('military_service_number', models.CharField(max_length=15)),
                ('military_service', models.CharField(max_length=15)),
                ('military_rank', models.CharField(max_length=15)),
                ('military_retired_date', models.DateField()),
                ('military_service_years', models.IntegerField(choices=[(1, '未滿3年者'), (2, '滿3年未滿6年者'), (3, '滿6年未滿9年者'), (4, '滿9年未滿12年者'), (5, '滿12年未滿15年者'), (6, '滿15年未滿18年者'), (7, '滿18年未滿21年者'), (8, '滿21年未滿24年者'), (9, '滿24年以上者')])),
                ('identity_front', models.ImageField(upload_to='')),
                ('identity_back', models.ImageField(upload_to='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
    ]
